pipeline {
    agent {
        node {
            label 'k8s_master'
        }
    }
    
    parameters {
        string(name: 'SERVICE_NAMES', description: 'Comma-separated list of service names to update')
        string(name: 'IMAGE_TAGS', description: 'Comma-separated list of image tags to deploy')
    }
    
    environment {
        DOCKER_HUB_USERNAME = "donalmun"
        GITHUB_CREDS = credentials('github_CI_k8s')
    }
    
    stages {
        stage('Prepare Git') {
            steps {
                sh "git checkout main"
                sh "git config user.email 'jenkins@example.com'"
                sh "git config user.name 'Jenkins CI'"
                
                withCredentials([usernamePassword(credentialsId: 'github_CI_k8s', 
                                                  usernameVariable: 'GIT_USERNAME', 
                                                  passwordVariable: 'GIT_PASSWORD')]) {
                    sh 'git remote set-url origin https://$GIT_USERNAME:$GIT_PASSWORD@github.com/donalmun/k8s_helm_lab2'
                    sh 'git pull origin main'
                }
            }
        }
        
        stage('Update Image Tags') {
            steps {
                script {
                    def serviceNames = params.SERVICE_NAMES.split(',')
                    def imageTags = params.IMAGE_TAGS.split(',')
                    
                    if (serviceNames.size() != imageTags.size()) {
                        error "Mismatch between number of services and tags"
                    }
                    
                    for (int i = 0; i < serviceNames.size(); i++) {
                        def service = serviceNames[i].trim()
                        def tag = imageTags[i].trim()
                        
                        echo "Updating ${service} to tag ${tag}"
                        
                        sh """
                            cd petclinic-helm/petclinic
                            sed -i "s|image: ${DOCKER_HUB_USERNAME}/${service}:.*|image: ${DOCKER_HUB_USERNAME}/${service}:${tag}|g" values.yaml
                        """
                        
                        // Verify the change was made (without failing if not found)
                        sh """
                            cd petclinic-helm/petclinic
                            cat values.yaml | grep "${service}" || echo "No match found for ${service}"
                        """
                    }
                }
            }
        }
        
        stage('Commit and Push') {
            steps {
                script {
                    sh 'cd petclinic-helm/petclinic && git status --porcelain > /tmp/changes.txt'
                    def hasChanges = readFile('/tmp/changes.txt').trim()
                    if (hasChanges) {
                        withCredentials([usernamePassword(credentialsId: 'github_CI_k8s', 
                                                        usernameVariable: 'GIT_USERNAME', 
                                                        passwordVariable: 'GIT_PASSWORD')]) {
                            sh '''
                                cd petclinic-helm/petclinic
                                git add values.yaml
                                git commit -m "Update services: ${SERVICE_NAMES}"
                                git push origin main
                            '''
                        }
                        echo "Pushed changes to repo"
                    } else {
                        echo "No changes detected, skipping commit"
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo "Successfully updated Helm charts for services: ${params.SERVICE_NAMES}"
        }
        failure {
            echo "Failed to update Helm charts"
        }
    }
}