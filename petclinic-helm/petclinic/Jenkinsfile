pipeline {
    agent {
        node {
            label 'k8s_master'
        }
    }
    
    parameters {
        string(name: 'SERVICE_NAME', description: 'Service name to update')
        string(name: 'IMAGE_TAG', description: 'New image tag to deploy')
    }
    
    environment {
        DOCKER_HUB_USERNAME = "donalmun"
        GITHUB_CREDS = credentials('github_CI_k8s')
    }
    
    stages {
        stage('Prepare Git') {
            steps {
                sh "git checkout main"
                sh "git config user.email 'jenkins@example.com'"
                sh "git config user.name 'Jenkins CI'"
                
                withCredentials([usernamePassword(credentialsId: 'github_CI_k8s', 
                                                  usernameVariable: 'GIT_USERNAME', 
                                                  passwordVariable: 'GIT_PASSWORD')]) {
                    // Fix the URL format - removed the second "https://" 
                    sh 'git remote set-url origin https://$GIT_USERNAME:$GIT_PASSWORD@github.com/donalmun/k8s_helm_lab2'
                    sh 'git pull origin main'
                }
            }
        }
        
        stage('Update Image Tag') {
            steps {
                script {
                    sh '''
                        cd petclinic-helm/petclinic
                        sed -i "s|image: ${DOCKER_HUB_USERNAME}/${SERVICE_NAME}:.*|image: ${DOCKER_HUB_USERNAME}/${SERVICE_NAME}:${IMAGE_TAG}|g" values.yaml
                        cat values.yaml | grep ${SERVICE_NAME}
                    '''
                }
            }
        }
        
        stage('Commit and Push') {
            steps {
                script {
                    sh 'cd petclinic-helm/petclinic && git status --porcelain > /tmp/changes.txt'
                    def hasChanges = readFile('/tmp/changes.txt').trim()
                    if (hasChanges) {
                        withCredentials([usernamePassword(credentialsId: 'github_CI_k8s', 
                                                        usernameVariable: 'GIT_USERNAME', 
                                                        passwordVariable: 'GIT_PASSWORD')]) {
                            sh '''
                                cd petclinic-helm/petclinic
                                git add values.yaml
                                git commit -m "Update ${SERVICE_NAME} image to ${IMAGE_TAG}"
                                git push origin main
                            '''
                        }
                        echo "Pushed changes to repo"
                    } else {
                        echo "No changes detected, skipping commit"
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo "Successfully updated Helm chart for ${params.SERVICE_NAME} with image tag ${params.IMAGE_TAG}"
        }
        failure {
            echo "Failed to update Helm chart for ${params.SERVICE_NAME}"
        }
    }
}